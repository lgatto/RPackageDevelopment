\documentclass{beamer}
%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FOR HANDOUTS UNCOMMENT:
%\documentclass[handout]{beamer}
%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FOR HANDOUTS UNCOMMENT:
%\usepackage{handoutWithNotes}
%\pgfpagesuselayout{3 on 1 with notes}[a4paper,border shrink=5mm]
%%%%%%%%%%%%%%%%%%%%%%%%%%

\usepackage[utf8]{inputenc}

% Setup appearance:
% \usetheme{Darmstadt}
%\usetheme{Copenhagen}
\usetheme{Boadilla}
\usefonttheme[onlylarge]{structurebold}
\usepackage{underscore}


\setbeamerfont*{frametitle}{size=\normalsize,series=\bfseries}
\setbeamertemplate{navigation symbols}{}
% Standard packages
% \usepackage[english]{babel}
% \usepackage{times}
\usepackage[T1]{fontenc}
\usepackage{ulem}
\usepackage{colortbl}
\usepackage{verbatim}
\usepackage{fancyvrb}
% Setup TikZ
\usepackage{tikz}
\usetikzlibrary{arrows}
\tikzstyle{block}=[draw opacity=0.7,line width=1.4cm]
% \usecolortheme{seagull}
\usecolortheme{seahorse}

\definecolor{Red}{rgb}{0.7,0,0}
\definecolor{Blue}{rgb}{0,0,0.8}

\hypersetup{%
  hyperindex = {true},
  colorlinks = {true},
  linktocpage = {true},
  plainpages = {false},
  linkcolor = {Blue},
  citecolor = {Blue},
  urlcolor = {Red},
  pdfstartview = {Fit},
  pdfpagemode = {UseOutlines},
  pdfview = {XYZ null null null}
}

%% new commande
\let\code=\texttt
\let\proglang=\textsf

\newcommand{\R}{\texttt{R~}}
\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}

\newcommand{\comments}[1]{}

\newenvironment<>{varblock}[2][\textwidth]{%
  \setlength{\textwidth}{#1}
  \begin{actionenv}#3%
    \def\insertblocktitle{#2}%
    \par%
    \usebeamertemplate{block begin}}
  {\par%
    \usebeamertemplate{block end}%
  \end{actionenv}}


%% Exercise counter
\newcounter{exerciseCounter}
\newcommand{\exerciseCount}{%
  \stepcounter{exerciseCounter}%
  \theexerciseCounter}

\newcommand{\exercise}{\textbf{Exercise \exerciseCount:}~}

% Author, Title, etc.
\title[] 
{
  R Package Development
}

\author[Stojni\'c and Gatto]
{
  Robert~Stojni\'c \\
  Laurent~Gatto \\
}

\date{ \today }


\pgfdeclareimage[width=5.5cm]{uml-diagram}{./Figures/uml-diagram}



\AtBeginSection[] % Do nothing for \section*
{
\begin{frame}<beamer>
\frametitle{Plan}
\tableofcontents[currentsection]
\end{frame}
}


% The main document

\begin{document}

<<include=FALSE>>=
library(knitr)
opts_chunk$set(
concordance=TRUE
)
@

<<knitr, echo=FALSE>>=
opts_chunk$set(tidy.opts = 
               list(width.cutoff = 50, 
                    tidy = FALSE),
               fig.align = 'center',
               stop_on_error = 1L,
               comment = NA,
               prompt = TRUE)
options(width = 60)
@ 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Title frame                                                 %% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{frame}
  \titlepage
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Table of contents                                           %% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{frame}{Plan}
  \footnotesize
  \tableofcontents
\end{frame}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% section                                                     %% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{R package basics}

\begin{frame}[fragile]
  \begin{block}{References}
    \begin{itemize}
    \item R Installation and Administration [R-admin], R Core team 
    \item Writing R Extensions [R-ext], R Core team      
    \end{itemize}    
    Use \texttt{help.start()} to access them from your local installation, 
    or \url{http://cran.r-project.org/manuals.html} from the web.
  \end{block}
  \begin{block}{Terminology}
    A \textbf{package} is loaded from a \textbf{library} by the function \Rfunction{library()}. 
    Thus a library is a directory containing installed packages. \\
    \bigskip
    Calling \Rfunction{library("foo", lib.loc = "/path/to/bar")} loads the package (book) \Rpackage{foo} from the 
    library \texttt{bar} located at \texttt{/path/to/bar}.  
  \end{block}
\end{frame}

\begin{frame}
    \begin{columns}[c]
      \begin{column}{.55\linewidth}
        \begin{block}{Packages}
        One of the aspects that make \R appealing:
        \begin{description}
        \item[CRAN] package repository features 5986 available packages.
        \item[R-forge] 1800 hosted projects.
        \item[Bioconductor] 934 reviewed packages in latest release (version 3.0).
        \end{description}
        \bigskip
        \flushright \tiny Numbers checked in October 2014
      \end{block}
    \end{column}
    \begin{column}{.42\linewidth}
      \includegraphics[width=\linewidth]{./Figures/CRANpackageNumbers.png}
    \end{column}
  \end{columns}
\end{frame}

\begin{frame}
  \begin{block}{Why packages}
    \textit{Packages provide a mechanism for loading optional code and attached documentation as needed.} \\
    There is more to it -- packages are a means to 
    \begin{itemize}
    \item logically group your own functions 
    \item keep code and documentation together and consistent
    \item keep code and data together
    \item keep track of changes in code 
    \item summarise all packages used for a analysis (see \Rfunction{sessionInfo()})
    \item make a reproducible research compendium (container for code, text, data as a means for distributing, managing and updating)
    \item optionally test your code
    \item \ldots project managment
    \end{itemize}
    even if you do not plan to distribute them.
  \end{block}
\end{frame}

\begin{frame}[fragile]{Package creation workflow}
  \begin{block}{Workflow}
  	\begin{enumerate}
  		\item Prepare your code as .R file(s)
  		\item Use function \Rfunction{package.skeleton()} to place them in the ``package layout''
  		\item Create the .tar.gz file using \texttt{\bf R CMD build myRpackage}
  		\item (Optional, but recommended) Check the .tar.gz for errors using\\ \texttt{\bf R CMD check myRpackage\_1.0.tar.gz}
  		\item Install the package using \texttt{\bf R CMD INSTALL myRpackage\_1.0.tar.gz} or 
  			  \Rfunction{install.packages()}
  	\end{enumerate}
  \end{block}
  \begin{block}{Notes}
  	- Use steps 1-5 to create the initial version of the package, and steps 3-5 to update the package.\\
  	- Text in \textbf{bold} is executed \textbf{outside R} (i.e. from the console).
  \end{block}
\end{frame}

\begin{frame}[fragile]{Creating a package - package.skeleton()}
  \begin{block}{A minimal package}
  	We prepared a file read.R that containt the function \Rfunction{readFasta()}. 
  	
    Function package.skeleton() automates some of the setup for a new package:    
  \end{block}
<<minpkg,echo=TRUE>>=
package.skeleton(name="myRpackage", code_files="read.R")
@   
\end{frame}

\begin{frame}[fragile]
<<minpkg2, echo=TRUE, eval = FALSE>>=
package.skeleton(name="myRpackage", code_files="read.R")
@ 
\begin{block}{}
  produces
\end{block}
\begin{verbatim}
myRpackage/
|-- DESCRIPTION
|-- NAMESPACE
|-- man
|   `-- myRpackage-package.Rd
|   `-- readFasta.Rd
|-- R
|   `-- read.R
`-- Read-and-delete-me

2 directories, 6 files
\end{verbatim}
\end{frame}

\begin{frame}[fragile]{Building the package}
\begin{block}{Note}
To build the package we will first delete the documentation 
templates (we will revisit this later).  
\end{block}
\begin{verbatim}
# delete documentation templates
$ rm -f myRpackage/man/* 
$ R CMD build myRpackage
* checking for file ‘myRpackage/DESCRIPTION’ ... OK
* preparing ‘myRpackage’:
* checking DESCRIPTION meta-information ... OK
* checking for LF line-endings in source and make files
* checking for empty or unneeded directories
* building ‘myRpackage_1.0.tar.gz
\end{verbatim}
\end{frame}

\begin{frame}[fragile]{Installing and using the package}
\begin{scriptsize}
\begin{verbatim}
$ R CMD INSTALL myRpackage_1.0.tar.gz
* installing to library ‘/ext/home/R/x86_64-pc-linux-gnu-library/3.1’
* installing *source* package ‘myRpackage’ ...
** R
** preparing package for lazy loading
** help
No man pages found in package  ‘myRpackage’ 
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (myRpackage)
\end{verbatim}
\begin{block}{Use package}
	We can verify the new package is now available (although still not fully functional!) from R:
\end{block}
<<minpkg3, echo=TRUE, eval = FALSE>>=
library("myRpackage")

readFasta("aDnaSeq.fasta")
@ 
\end{scriptsize}  
\end{frame}

\begin{frame}
  \begin{block}{\exercise Create a package}
  	Follow the steps from the previous slides to create the example package 
  	containing the \Rfunction{readFasta()} function. 
  \end{block}
  \begin{block}{\exercise Complete the package functionality}
  	Add the \Rfunction{GenericSeq} class to the package by adding a new
  	file \texttt{DataClasses.R} to your package. Copy this file
  	to the package \texttt{R/} directory and then rebuild the package
  	following steps 3-5.
  \end{block}
\end{frame}

\begin{frame}[fragile]{Some practical tips}
  \begin{block}{Using \Rfunction{devtools}}
  	Rebuilding and reloading packages can be a bit cumbersome. Package
  	\Rfunction{devtools} has many great tools for package development, 
  	such as \Rfunction{load_all()} that mimics the rebuild/reload process.

<<devtools,echo=TRUE,eval=FALSE>>=
library(devtools)
load_all("myRpackage/") 

readFasta("aDnaSeq.fasta") 
@   	  	
  	... and many more!
  \end{block}
\end{frame}

%%%%%%%%

\input{struct.tex}

\input{rd.tex}

\input{testing.tex}

\input{dist.Rnw}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% section                                                     %% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section*{References}

\begin{frame}{References}
  \begin{block}{Further reading}
    \begin{itemize}
    \item R Installation and Administration, R Core team.
    \item Writing R Extensions, R Core team.
    \item Robert Gentleman, \R Programming for Bioinformatics, 2008.
    \item Building packages for Bioconductor:
      \url{http://www.bioconductor.org/developers/how-to/buildingPackagesForBioc/}
    \item \R package development, by Hadley Wickham:
      \url{http://r-pkgs.had.co.nz/}
%%     \item \Rpackage{Rcpp} documentation
%%     \item Parallel R (end 2011), \Rpackage{parallel} and \Rpackage{foreach} vignettes
%%       and the \textit{High Performance Computing} CRAN task view.
%% %%    \item \url{http://logic.sysbiol.cam.ac.uk/teaching/advancedR/}
    \end{itemize}
  \end{block}
\end{frame}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Last slide                                                  %% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{frame}
  \vspace{2cm}
  \begin{itemize}
  \item This work is licensed under a CC BY-SA 3.0 License 
  \item Slides and other material: \url{https://github.com/lgatto/TeachingMaterial}
  \end{itemize}
  \vspace{.7cm}
  \begin{center}
    Thank you for you attention.
  \end{center}
\end{frame}


\end{document}
